/**
 * Copyright (c) 2008-2016, Massachusetts Institute of Technology (MIT)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package edu.mit.ll.nics.common.entity;

// Generated Sep 30, 2011 1:24:44 PM by Hibernate Tools 3.4.0.CR1

import java.util.logging.Level;
import java.util.logging.Logger;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Proxy;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * IncidentIncidenttype generated by hbm2java
 */
@Entity
@Proxy(lazy=false)
@Table(name = "incident_incidenttype")
public class IncidentIncidentType extends SADisplayMessageEntity implements SADisplayPersistedEntity {

	private int incidentIncidenttypeid;
	private Incident incident;
	private IncidentType incidentType;
	private int incidenttypeid;
	private int incidentid;

	public IncidentIncidentType() {
	}

	public IncidentIncidentType(int incidentIncidenttypeid, Incident incident) {
		this.incidentIncidenttypeid = incidentIncidenttypeid;
		this.incident = incident;
	}

	public IncidentIncidentType(int incidentIncidenttypeid, Incident incident,
			IncidentType incidenttype) {
		this.incidentIncidenttypeid = incidentIncidenttypeid;
		this.incident = incident;
		this.incidentType = incidenttype;
	}

	@Id @GeneratedValue
	@Column(name = "incident_incidenttypeid", unique = true, nullable = false)
	public int getIncidentIncidenttypeid() {
		return this.incidentIncidenttypeid;
	}

	public void setIncidentIncidenttypeid(int incidentIncidenttypeid) {
		this.incidentIncidenttypeid = incidentIncidenttypeid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "incidentid", nullable = false, insertable = false, updatable = false)
	public Incident getIncident() {
		return this.incident;
	}

	public void setIncident(Incident incident) {
		this.incident = incident;
	}
	
	@Column(name = "incidentid", nullable = false)
	public int getIncidentid() {
		return this.incidentid;
	}

	public void setIncidentid(int incidentid) {
		this.incidentid = incidentid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "incidenttypeid", insertable = false, updatable = false)
	public IncidentType getIncidentType() {
		return this.incidentType;
	}

	public void setIncidentType(IncidentType incidenttype) {
		this.incidentType = incidenttype;
	}
	
	@Column(name = "incidenttypeid")
	public int getIncidenttypeid() {
		return this.incidenttypeid;
	}

	public void setIncidenttypeid(int incidenttypeid) {
		this.incidenttypeid = incidenttypeid;
	}
	
	//@Override // LDDRS-648 - Removing to get to compile
	public JSONObject toJSONObject()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			json.put("incidentTypeId", this.incidenttypeid);
			if(this.incidentType != null){
				json.put("incidentTypeName", this.incidentType.getIncidentTypeName());
			}
		} catch (JSONException je)
		{
			Logger.getLogger(Incident.class.getSimpleName()).log(Level.SEVERE, null, je);
		}
		
		return json;
	}

}
