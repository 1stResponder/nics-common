/**
 * Copyright (c) 2008-2016, Massachusetts Institute of Technology (MIT)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package edu.mit.ll.nics.common.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Proxy;
import org.json.JSONException;
import org.json.JSONObject;
import edu.mit.ll.nics.common.entity.User;

/**
 * Collabroom generated by hbm2java
 */
@Entity
@Proxy(lazy=false)
@Table(name = "collabroompermission")
public class CollabroomPermission extends SADisplayMessageEntity implements SADisplayPersistedEntity {
	
	 private int collabRoomId;
	 private int userId;
	 private int systemRoleId;
	 private int collabroomPermissionId;
	 
	 private CollabRoom collabroom;
	 private User user;
	 private SystemRole systemRole;
	
	 public CollabroomPermission() {}
	 
	 public CollabroomPermission(int collabRoomId, int userid, int systemRoleId, int collabRoomPermissionId) {
		 this.collabRoomId = collabRoomId;
		 this.userId = userid;
		 this.systemRoleId = systemRoleId;
		 this.collabroomPermissionId = collabRoomPermissionId;
	 }
	 
	 @Id @GeneratedValue
	 @Column(name = "collabroompermissionid", unique = true, nullable = false)
	 public int getCollabroomPermissionId() {
			return this.collabroomPermissionId;
	 }

	 public void setCollabroomPermissionId(int collabRoomPermissionId) {
			this.collabroomPermissionId = collabRoomPermissionId;
	 }

	 public void setCollabRoomId(int collabroomid){
		 this.collabRoomId = collabroomid;
	 }
	 
	 @Column(name = "collabroomid", nullable = false)
	 public int getCollabRoomId(){
		 return this.collabRoomId;
	 }
	 
	 public void setUserId(int userid){
		 this.userId = userid;
	 }
	 
	 @Column(name = "userid", nullable = false)
	 public int getUserId(){
		 return this.userId;
	 }
	 
	 public void setSystemRoleId(int systemRoleId){
		 this.systemRoleId = systemRoleId;
	 }
	 
	 @Column(name = "systemroleid", nullable = false)
	 public int getSystemRoleId(){
		 return this.systemRoleId;
	 }
	 
	 @ManyToOne(fetch = FetchType.LAZY)
	 @JoinColumn(name = "collabroomid", insertable=false, updatable = false)
	 public CollabRoom getCollabroom() {
		return this.collabroom;
	 }
	 
	 @ManyToOne(fetch = FetchType.LAZY)
	 @JoinColumn(name = "userid", insertable=false, updatable = false)
	 public User getUser() {
		return this.user;
	 }
	 
	 @ManyToOne(fetch = FetchType.LAZY)
	 @JoinColumn(name = "systemroleid", insertable=false, updatable = false)
	 public SystemRole getSystemRole() {
		return this.systemRole;
	 }
	 
	 public void setCollabroom(CollabRoom room){
		 this.collabroom = room;
	 }
	 
	 public void setUser(User user){
		 this.user = user;
	 }
	 
	 public void setSystemRole(SystemRole role){
		 this.systemRole = role;
	 }
	 
	 public JSONObject toJSONObject(){
		 JSONObject json = new JSONObject();
		 try{
			 json.put("collabRoomId", this.collabRoomId);
			 json.put("userId", this.userId);
			 json.put("systemRoleId", this.systemRoleId);
		 }catch(JSONException e){}
		 return json;
	 }

}