/**
 * Copyright (c) 2008-2016, Massachusetts Institute of Technology (MIT)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package edu.mit.ll.nics.common.entity;

// Generated Sep 30, 2011 1:24:44 PM by Hibernate Tools 3.4.0.CR1

import java.sql.Timestamp;
import java.util.Calendar;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Proxy;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Log generated by hbm2java
 */
@Entity
@Proxy(lazy=false)
@Table(name = "log")
public class Log extends SADisplayMessageEntity implements SADisplayPersistedEntity {

	private int logid;
	private LogType logType;
	private Usersession usersession;
	private int usersessionid;
	private String message;
	private Date created;
	private int logtypeid;
	private int status;
	private int workspaceid;

	public Log() {
	}

	public Log(int logid, LogType logtype, Date created) {
		this.logid = logid;
		this.logType = logtype;
		this.created = created;
	}

	public Log(int logid, LogType logtype, Usersession usersession,
			String message, Date created, int status) {
		this.logid = logid;
		this.logType = logtype;
		this.usersession = usersession;
		this.message = message;
		this.created = created;
		this.status = status;
	}

	@Id
	@Column(name = "logid", unique = true, nullable = false)
	public int getLogid() {
		return this.logid;
	}

	public void setLogid(int logid) {
		this.logid = logid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "logtypeid", insertable=false, updatable = false)
	public LogType getLogtype() {
		return this.logType;
	}

	public void setLogtype(LogType logtype) {
		this.logType = logtype;
	}
	
	@Column(name = "logtypeid", nullable = false)
	public int getLogtypeid(){
		return this.logtypeid;
	}
	
	public void setLogtypeid(int logtypeid){
		this.logtypeid = logtypeid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usersessionid", insertable=false, updatable = false)
	public Usersession getUsersession() {
		return this.usersession;
	}

	public void setUsersession(Usersession usersession) {
		this.usersession = usersession;
	}
	
	@Column(name = "usersessionid", nullable = false)
	public int getUsersessionid(){
		return this.usersessionid;
	}
	
	public void setUsersessionid(int usersessionid){
		this.usersessionid = usersessionid;
	}

	@Column(name = "message")
	public String getMessage() {
		return this.message;
	}

	public void setMessage(String message) {
		this.message = encodeForHTML(message);
	}
	
	@Column(name = "status")
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}
	
	public int getWorkspaceid() {
		return this.workspaceid;
	}

	public void setWorkspaceId(int workspaceid) {
		this.workspaceid = workspaceid;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}
	
	public JSONObject toJSONObject(){
		try{
			JSONObject object = new JSONObject();
			object.put("logid", this.logid);
			object.put("logtypeid", this.logtypeid);
			object.put("message", this.message);
			object.put("usersessionid", this.usersessionid);
			object.put("status", this.status);
			if(this.created != null){
				object.put("created", this.created.toString());
			}
			return object;
		}catch(JSONException e){}
		return null;
	}

}
