/**
 * Copyright (c) 2008-2016, Massachusetts Institute of Technology (MIT)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package edu.mit.ll.nics.common.entity;

// Generated Sep 30, 2011 1:24:44 PM by Hibernate Tools 3.4.0.CR1
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Proxy;
import org.hibernate.annotations.Type;

import com.vividsolutions.jts.geom.Polygon;

import edu.mit.ll.nics.common.entity.datalayer.DatalayerCollabroom;
import edu.mit.ll.nics.common.entity.datalayer.DocumentCollabroom;

import org.json.JSONException;
import org.json.JSONObject;

/**
 * Collabroom generated by hbm2java
 */
@Entity
@Proxy(lazy=false)
@Table(name = "collabroom")
@SequenceGenerator(name = "SEQ_STORE",
sequenceName = "collab_room_seq",
allocationSize = 1)
public class CollabRoom extends SADisplayMessageEntity implements SADisplayPersistedEntity {
    private static final long serialVersionUID = 1L;
    
    private int collabRoomId;
    private Incident incident;
    private int incidentid;
    private Usersession usersession;
    private int usersessionid;
    private String name;
    private Date created;
    private Polygon bounds;
    
    @Transient
    private Collection<Integer> adminUsers = new ArrayList<Integer>();
    
    @Transient
    private Collection<Integer> readWriteUsers = new ArrayList<Integer>();
    

    public CollabRoom() {
    }

    public CollabRoom(int collabRoomId, Usersession usersession, String name,
            Date created) {
        this.collabRoomId = collabRoomId;
        this.usersession = usersession;
        this.name = name;
        this.created = created;
    }

    public CollabRoom(int collabRoomId, Incident incident,
            Usersession usersession, String name, Date created,
            Polygon bounds, Set<CollabroomFeature> features, Set<Chat> chats) {
        this.collabRoomId = collabRoomId;
        this.incident = incident;
        this.usersession = usersession;
        this.name = name;
        this.created = created;
        this.bounds = bounds;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SEQ_STORE")
    @Column(name = "collabroomid", unique = true, nullable = false)
    public int getCollabRoomId() {
        return this.collabRoomId;
    }

    public void setCollabRoomId(int collabRoomId) {
        this.collabRoomId = collabRoomId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "incidentid", insertable = false, updatable = false)
    public Incident getIncident() {
        return this.incident;
    }

    public void setIncident(Incident incident) {
        this.incident = incident;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "usersessionid", insertable = false, updatable = false)
    public Usersession getUsersession() {
        return this.usersession;
    }

    public void setUsersession(Usersession usersession) {
        this.usersession = usersession;
    }

    @Column(name = "name", nullable = false, length = 64)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = encodeForHTML(name);
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created", nullable = false, length = 29)
    public Date getCreated() {
        return this.created;
    }

    public void setCreated(Date created) {
        this.created = created;
    }

    @Type(type = "org.hibernate.spatial.GeometryType")
    @Column(name = "bounds")
    public Polygon getBounds() {
        return this.bounds;
    }

    public void setBounds(Polygon bounds) {
        this.bounds = bounds;
    }

    
    @Column(name = "incidentid", nullable = false)
    public int getIncidentid() {
        return incidentid;
    }

    public void setIncidentid(int incidentid) {
        this.incidentid = incidentid;
    }

    @Column(name = "usersessionid", nullable = false)
    public int getUsersessionid() {
        return usersessionid;
    }

    public void setUsersessionid(int usersessionid) {
        this.usersessionid = usersessionid;
    }
    
    @Transient
    public Collection<Integer> getAdminUsers(){
    	return this.adminUsers;
    }
    
    @Transient
    public Collection<Integer> getReadWriteUsers(){
    	return this.readWriteUsers;
    }
    
    @Transient
    public void setAdminUsers(Collection<Integer> adminUsers){
    	this.adminUsers = adminUsers;
    }
    
    @Transient
    public void setReadWriteUsers(Collection<Integer> readWriteUsers){
    	this.readWriteUsers = readWriteUsers;
    }
    
    
    @Override
    public JSONObject toJSONObject() throws JSONException {
        JSONObject json = new JSONObject();
        json.put("collabroomid", this.collabRoomId);
        json.put("usersessionid", this.usersessionid);
        json.put("incidentid", this.incidentid);
        json.put("name", this.name);
        json.put("created", this.created);
        json.put("bounds", this.bounds);
        return json;
    }
}
