/**
 * Copyright (c) 2008-2016, Massachusetts Institute of Technology (MIT)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package edu.mit.ll.nics.common.entity;

// Generated Oct 7, 2011 8:20:22 AM by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Proxy;

import org.json.JSONException;
import org.json.JSONObject;

/**
 * Userorg generated by hbm2java
 */
@Entity
@Proxy(lazy=false)
@Table(name = "userorg")
public class UserOrg extends SADisplayMessageEntity implements SADisplayPersistedEntity {

	private int userorgid;
	private Org org;
	private int orgid;
	private SystemRole systemrole;
	private User user;
	private Date created;
	private String unit;
	private String rank;
	private Set<Usersession> usersessions = new HashSet<Usersession>(0);
	private String description;
	private String jobTitle;
	private int userid;
	private int systemroleid;

	public UserOrg() {
	}

	public UserOrg(int userorgid, Org org, SystemRole systemrole, User user, Date created) {
		this.userorgid = userorgid;
		this.org = org;
		this.systemrole = systemrole;
		this.user = user;
		this.created = created;
	}

	public UserOrg(int userorgid, Org org, SystemRole systemrole, User user,
			Date created, String unit, String rank,
			Set<Usersession> usersessions) {
		this.userorgid = userorgid;
		this.org = org;
		this.systemrole = systemrole;
		this.user = user;
		this.created = created;
		this.unit = unit;
		this.rank = rank;
		this.usersessions = usersessions;
	}

	@Id
	@Column(name = "userorgid", unique = true, nullable = false)
	public int getUserorgid() {
		return this.userorgid;
	}

	public void setUserorgid(int userorgid) {
		this.userorgid = userorgid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "orgid", nullable = false, insertable = false, updatable = false)
	public Org getOrg() {
		return this.org;
	}

	public void setOrg(Org org) {
		this.org = org;
	}
	
	@Column(name = "orgid", nullable = false)
	public int getOrgid() {
		return this.orgid;
	}

	public void setOrgid(int orgid) {
		this.orgid = orgid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "systemroleid", nullable = false, insertable = false, updatable = false)
	public SystemRole getSystemrole() {
		return this.systemrole;
	}

	public void setSystemrole(SystemRole systemrole) {
		this.systemrole = systemrole;
	}

	@Column(name = "systemroleid", nullable = false)
	public int getSystemroleid(){
		return this.systemroleid;
	}
	
	public void setSystemroleid(int systemroleid){
		this.systemroleid = systemroleid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userid", nullable = false, insertable = false, updatable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}
	
	@Column(name = "userid", nullable = false)
	public int getUserid(){
		return this.userid;
	}
	
	public void setUserid(int userid){
		this.userid = userid;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "description", length = 250)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = encodeForHTML(description);
	}
	
	@Column(name = "jobtitle", length = 25)
	public String getJobTitle() {
		return this.jobTitle;
	}

	public void setJobTitle(String jobTitle) {
		this.jobTitle = encodeForHTML(jobTitle);
	}

	@Column(name = "rank", length = 45)
	public String getRank() {
		return this.rank;
	}

	public void setRank(String rank) {
		this.rank = encodeForHTML(rank);
	}

	@Column(name = "unit", length = 45)
	public String getUnit() {
		return this.unit;
	}

	public void setUnit(String unit) {
		this.unit = encodeForHTML(unit);
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userorg")
	public Set<Usersession> getUsersessions() {
		return this.usersessions;
	}

	public void setUsersessions(Set<Usersession> usersessions) {
		this.usersessions = usersessions;
	}

	@Override
	public JSONObject toJSONObject() throws JSONException {
		JSONObject object = new JSONObject();
		
		object.put("orgid", this.orgid);
		object.put("created", this.created);
		object.put("rank", this.rank);
		object.put("systemroleid", this.systemroleid);
		object.put("jobTitle", this.jobTitle);
		object.put("description", this.description);
		object.put("userid", this.userid);
		object.put("userorgid", this.userorgid);
		
		return object;
	}

}
